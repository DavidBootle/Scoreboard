extends subpage

block content 

    script(src='/javascripts/formutils.js')
    script(src='/javascripts/teams.js')
    script(src='/javascripts/bootstrap.min.js')


    script.
        function validateName(input) {
            const nameFeedbackId = "#nameFeedback";

            // requirement 1: must have a value
            if (!requirement(input, nameFeedbackId, "Team name is a required property", (value) => { return (value.length != 0) })) { return false; }

            // requirement 2: cannot be more than 40 characters
            if (!requirement(input, nameFeedbackId, "Team name must be 40 characters or less.", (value) => { return (value.length <= 40) })) { return false; }

            // requirement 3: must match pattern
            if (!requirement(input, nameFeedbackId, "Team name can only contain upper and lowercase letters, numbers, spaces, hyphens, and underscores.", (value) => { return (/^[A-Za-z0-9 \-_]+$/.test(value)) })) { return false; }

            return true
        }

        function validateID(input) {
            const idFeedbackId = '#idFeedback';

            // requirement 1: must be exactly 3 digits
            if (!requirement(input, idFeedbackId, "Must be exactly three digits.", (value) => { return (value.length == 3) })) { return false; }

            // requirement 2: must match pattern
            if (!requirement(input, idFeedbackId, "Must be numeric.", (value) => { return (/^[0-9]*$/.test(value)) })) { return false; }

            return true
        }

        function validateScore(input) {
            const scoreFeedbackId = '#scoreFeedback';

            // requirement 1: must have a value
            if (!requirement(input, scoreFeedbackId, "Initial score is a required property.", (value) => { return (value.length > 0) })) { return false }

            // requirement 2: must not be greater than 30 digits
            if (!requirement(input, scoreFeedbackId, "Must not be greater than 30 digits.", (value) => { return (value.length <= 30) })) { return false }

            // requirement 3: must be numeric
            if (!requirement(input, scoreFeedbackId, "Must be an integer.", (value) => { return (/^\-?[0-9]+$/.test(value)) })) { return false }

            return true
        }

        function validateAndSubmit() {
            if (validateName('#name') && validateID('#id') && validateScore('#score')) {
                newTeam()
            }
        }

    //- Good Alert
    div(id='alert-box')

    div(id='page-content')
        h1 New Team
        form(novalidate)
            div(class='form-group mb-3')
                label(for='name') Team Name
                input(class='form-control', id='name', type='text', name='name', placeholder='Team Name', onkeyup='validateName(this)')
                div(class='invalid-feedback', id='nameFeedback')
            div(class='form-group mb-3')
                label(for='id') Team ID
                input(class='form-control', id='id', type='text', name='id', placeholder='420', onkeyup='validateID(this)')
                div(class='invalid-feedback', id='idFeedback')
            div(class='form-group mb-3')
                label(for='score') Intitial Score
                input(class='form-control', id='score', type='text', name='score', placeholder='0', onkeyup='validateScore(this)')
                div(class='invalid-feedback', id='scoreFeedback') 
        button(onclick='validateAndSubmit()', class='btn btn-primary') Create
        a(class='btn btn-outline-secondary ms-1', href='/teams') Cancel
    
    script(src="/socket.io/socket.io.js")
    script(src="/javascripts/socketutils.js")
    script.
        var socket = io()
        addLogoffListener(socket);